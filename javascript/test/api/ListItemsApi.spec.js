/**
 * Wish List API
 * A REST API to control wish lists
 *
 * OpenAPI spec version: 1.0.0
 * Contact: caleb_bertsch@sweetwater.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WishListApi);
  }
}(this, function(expect, WishListApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WishListApi.ListItemsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListItemsApi', function() {
    describe('listsListIdItemsGet', function() {
      it('should call listsListIdItemsGet successfully', function(done) {
        //uncomment below and update the code to test listsListIdItemsGet
        //instance.listsListIdItemsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsListIdItemsListItemIdDelete', function() {
      it('should call listsListIdItemsListItemIdDelete successfully', function(done) {
        //uncomment below and update the code to test listsListIdItemsListItemIdDelete
        //instance.listsListIdItemsListItemIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsListIdItemsListItemIdGet', function() {
      it('should call listsListIdItemsListItemIdGet successfully', function(done) {
        //uncomment below and update the code to test listsListIdItemsListItemIdGet
        //instance.listsListIdItemsListItemIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsListIdItemsListItemIdPatch', function() {
      it('should call listsListIdItemsListItemIdPatch successfully', function(done) {
        //uncomment below and update the code to test listsListIdItemsListItemIdPatch
        //instance.listsListIdItemsListItemIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsListIdItemsListItemIdRestorePost', function() {
      it('should call listsListIdItemsListItemIdRestorePost successfully', function(done) {
        //uncomment below and update the code to test listsListIdItemsListItemIdRestorePost
        //instance.listsListIdItemsListItemIdRestorePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsListIdItemsPost', function() {
      it('should call listsListIdItemsPost successfully', function(done) {
        //uncomment below and update the code to test listsListIdItemsPost
        //instance.listsListIdItemsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsListIdItemsSortPost', function() {
      it('should call listsListIdItemsSortPost successfully', function(done) {
        //uncomment below and update the code to test listsListIdItemsSortPost
        //instance.listsListIdItemsSortPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listsListIdItemsTransferPost', function() {
      it('should call listsListIdItemsTransferPost successfully', function(done) {
        //uncomment below and update the code to test listsListIdItemsTransferPost
        //instance.listsListIdItemsTransferPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
